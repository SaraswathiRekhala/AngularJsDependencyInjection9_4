/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.angularjsdependencyinjection9_4.schooldb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Gradedetails generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`GRADEDETAILS`", uniqueConstraints = {
            @UniqueConstraint(name = "`SQL170810085947600`", columnNames = {"`GRADE`"})})
public class Gradedetails implements Serializable {

    private Integer gradeid;
    private String grade;
    private int minvalue;
    private int maxvalue;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`GRADEID`", nullable = false, scale = 0, precision = 10)
    public Integer getGradeid() {
        return this.gradeid;
    }

    public void setGradeid(Integer gradeid) {
        this.gradeid = gradeid;
    }

    @Column(name = "`GRADE`", nullable = false, length = 2)
    public String getGrade() {
        return this.grade;
    }

    public void setGrade(String grade) {
        this.grade = grade;
    }

    @Column(name = "`MINVALUE`", nullable = false, scale = 0, precision = 10)
    public int getMinvalue() {
        return this.minvalue;
    }

    public void setMinvalue(int minvalue) {
        this.minvalue = minvalue;
    }

    @Column(name = "`MAXVALUE`", nullable = false, scale = 0, precision = 10)
    public int getMaxvalue() {
        return this.maxvalue;
    }

    public void setMaxvalue(int maxvalue) {
        this.maxvalue = maxvalue;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Gradedetails)) return false;
        final Gradedetails gradedetails = (Gradedetails) o;
        return Objects.equals(getGradeid(), gradedetails.getGradeid());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getGradeid());
    }
}