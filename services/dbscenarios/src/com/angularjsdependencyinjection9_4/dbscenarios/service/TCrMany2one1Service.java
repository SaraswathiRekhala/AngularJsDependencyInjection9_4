/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.angularjsdependencyinjection9_4.dbscenarios.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import com.angularjsdependencyinjection9_4.dbscenarios.TCrMany2one1;
import com.angularjsdependencyinjection9_4.dbscenarios.TCrMany2one1Id;
import com.angularjsdependencyinjection9_4.dbscenarios.TCrMany2one2;

/**
 * Service object for domain model class {@link TCrMany2one1}.
 */
public interface TCrMany2one1Service {

    /**
     * Creates a new TCrMany2one1. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TCrMany2one1 if any.
     *
     * @param tcrMany2one1 Details of the TCrMany2one1 to be created; value cannot be null.
     * @return The newly created TCrMany2one1.
     */
    TCrMany2one1 create(@Valid TCrMany2one1 tcrMany2one1);


	/**
     * Returns TCrMany2one1 by given id if exists.
     *
     * @param tcrmany2one1Id The id of the TCrMany2one1 to get; value cannot be null.
     * @return TCrMany2one1 associated with the given tcrmany2one1Id.
	 * @throws EntityNotFoundException If no TCrMany2one1 is found.
     */
    TCrMany2one1 getById(TCrMany2one1Id tcrmany2one1Id);

    /**
     * Find and return the TCrMany2one1 by given id if exists, returns null otherwise.
     *
     * @param tcrmany2one1Id The id of the TCrMany2one1 to get; value cannot be null.
     * @return TCrMany2one1 associated with the given tcrmany2one1Id.
     */
    TCrMany2one1 findById(TCrMany2one1Id tcrmany2one1Id);

	/**
     * Find and return the list of TCrMany2one1s by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param tcrmany2one1Ids The id's of the TCrMany2one1 to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return TCrMany2one1s associated with the given tcrmany2one1Ids.
     */
    List<TCrMany2one1> findByMultipleIds(List<TCrMany2one1Id> tcrmany2one1Ids, boolean orderedReturn);


    /**
     * Updates the details of an existing TCrMany2one1. It replaces all fields of the existing TCrMany2one1 with the given tcrMany2one1.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TCrMany2one1 if any.
     *
     * @param tcrMany2one1 The details of the TCrMany2one1 to be updated; value cannot be null.
     * @return The updated TCrMany2one1.
     * @throws EntityNotFoundException if no TCrMany2one1 is found with given input.
     */
    TCrMany2one1 update(@Valid TCrMany2one1 tcrMany2one1);

    /**
     * Deletes an existing TCrMany2one1 with the given id.
     *
     * @param tcrmany2one1Id The id of the TCrMany2one1 to be deleted; value cannot be null.
     * @return The deleted TCrMany2one1.
     * @throws EntityNotFoundException if no TCrMany2one1 found with the given id.
     */
    TCrMany2one1 delete(TCrMany2one1Id tcrmany2one1Id);

    /**
     * Deletes an existing TCrMany2one1 with the given object.
     *
     * @param tcrMany2one1 The instance of the TCrMany2one1 to be deleted; value cannot be null.
     */
    void delete(TCrMany2one1 tcrMany2one1);

    /**
     * Find all TCrMany2one1s matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TCrMany2one1s.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<TCrMany2one1> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all TCrMany2one1s matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TCrMany2one1s.
     *
     * @see Pageable
     * @see Page
     */
    Page<TCrMany2one1> findAll(String query, Pageable pageable);

    /**
     * Exports all TCrMany2one1s matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all TCrMany2one1s matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the TCrMany2one1s in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the TCrMany2one1.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);

    /*
     * Returns the associated tcrMany2one2s for given TCrMany2one1 id.
     *
     * @param longCol value of longCol; value cannot be null
     * @param booleanCol value of booleanCol; value cannot be null
     * @param stringCol value of stringCol; value cannot be null
     * @param byteId value of byteId; value cannot be null
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of associated TCrMany2one2 instances.
     *
     * @see Pageable
     * @see Page
     */
    Page<TCrMany2one2> findAssociatedTcrMany2one2s(Long longCol, Boolean booleanCol, String stringCol, Short byteId, Pageable pageable);

}