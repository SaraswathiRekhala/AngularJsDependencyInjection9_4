/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.angularjsdependencyinjection9_4.dbscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Time;
import java.util.Objects;

public class VirtualOne2one1Id implements Serializable {

    private Integer serialId;
    private String characterColumn;
    private BigDecimal numericColumn;
    private Time timeWithTimeZone;
    private Time timeWithoutTimeZone;

    public Integer getSerialId() {
        return this.serialId;
    }

    public void setSerialId(Integer serialId) {
        this.serialId = serialId;
    }

    public String getCharacterColumn() {
        return this.characterColumn;
    }

    public void setCharacterColumn(String characterColumn) {
        this.characterColumn = characterColumn;
    }

    public BigDecimal getNumericColumn() {
        return this.numericColumn;
    }

    public void setNumericColumn(BigDecimal numericColumn) {
        this.numericColumn = numericColumn;
    }

    public Time getTimeWithTimeZone() {
        return this.timeWithTimeZone;
    }

    public void setTimeWithTimeZone(Time timeWithTimeZone) {
        this.timeWithTimeZone = timeWithTimeZone;
    }

    public Time getTimeWithoutTimeZone() {
        return this.timeWithoutTimeZone;
    }

    public void setTimeWithoutTimeZone(Time timeWithoutTimeZone) {
        this.timeWithoutTimeZone = timeWithoutTimeZone;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof VirtualOne2one1)) return false;
        final VirtualOne2one1 virtualOne2one1 = (VirtualOne2one1) o;
        return Objects.equals(getSerialId(), virtualOne2one1.getSerialId()) &&
                Objects.equals(getCharacterColumn(), virtualOne2one1.getCharacterColumn()) &&
                Objects.equals(getNumericColumn(), virtualOne2one1.getNumericColumn()) &&
                Objects.equals(getTimeWithTimeZone(), virtualOne2one1.getTimeWithTimeZone()) &&
                Objects.equals(getTimeWithoutTimeZone(), virtualOne2one1.getTimeWithoutTimeZone());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getSerialId(),
                getCharacterColumn(),
                getNumericColumn(),
                getTimeWithTimeZone(),
                getTimeWithoutTimeZone());
    }
}