/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.angularjsdependencyinjection9_4.dbscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

public class VirtualMany2oneId implements Serializable {

    private Integer serialType;
    private String characterType;
    private Short smallIntType;

    public Integer getSerialType() {
        return this.serialType;
    }

    public void setSerialType(Integer serialType) {
        this.serialType = serialType;
    }

    public String getCharacterType() {
        return this.characterType;
    }

    public void setCharacterType(String characterType) {
        this.characterType = characterType;
    }

    public Short getSmallIntType() {
        return this.smallIntType;
    }

    public void setSmallIntType(Short smallIntType) {
        this.smallIntType = smallIntType;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof VirtualMany2one)) return false;
        final VirtualMany2one virtualMany2one = (VirtualMany2one) o;
        return Objects.equals(getSerialType(), virtualMany2one.getSerialType()) &&
                Objects.equals(getCharacterType(), virtualMany2one.getCharacterType()) &&
                Objects.equals(getSmallIntType(), virtualMany2one.getSmallIntType());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getSerialType(),
                getCharacterType(),
                getSmallIntType());
    }
}